name: Main
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  install:
    runs-on: ubuntu-latest
    name: site:install
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: db
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      chromedriver:
        image: drupalci/webdriver-chromedriver:production
        ports:
          - 9515
    steps:
      - uses: actions/checkout@v4

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - uses: shivammathur/setup-php@v2
        with:
            php-version: 8.1
            extensions: dom, curl, libxml, mbstring, zip, pdo, mysql, pdo_mysql, bcmath, soap, intl, gd, exif, iconv
            coverage: none
            tools: composer:v2
      - name: Install dependencies
        run: composer install
      - name: Install Simplytest
        run: php vendor/bin/drush site:install simplytest --account-pass=admin --db-url=mysql://root:@127.0.0.1:${{ job.services.mysql.ports[3306] }}/db --yes
  phpstan:
    runs-on: ubuntu-latest
    name: phpstan
    steps:
      - uses: actions/checkout@v4

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - uses: shivammathur/setup-php@v2
        with:
            php-version: 8.1
            extensions: dom, curl, libxml, mbstring, zip, pdo, mysql, pdo_mysql, bcmath, soap, intl, gd, exif, iconv
            coverage: none
            tools: composer:v2
      - name: Install dependencies
        run: composer install
      - name: PHPStan
        run: php vendor/bin/phpstan.phar
  phpunit:
    runs-on: ubuntu-latest
    name: phpunit
    services:
      chromedriver:
        image: drupalci/webdriver-chromedriver:production
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: db
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v4

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - uses: shivammathur/setup-php@v2
        with:
            php-version: 8.1
            extensions: dom, curl, libxml, mbstring, zip, pdo, mysql, pdo_mysql, bcmath, soap, intl, gd, exif, iconv
            coverage: none
            tools: composer:v2
      - name: Install dependencies
        run: composer install
      - name: Run php built-in server
        run: php -S 127.0.0.1:8080 -t web &
      - name: Ensure sites/simpletest directory
        run: |
          mkdir -p web/sites/simpletest
          chmod 777 web/sites/simpletest
      - name: PHPUnit
        run: php vendor/bin/phpunit web/modules/custom
        env:
          SYMFONY_DEPRECATIONS_HELPER: weak
          SIMPLETEST_DB: mysql://root:@127.0.0.1:${{ job.services.mysql.ports[3306] }}/db
          SIMPLETEST_BASE_URL: http://127.0.0.1:8080
          MINK_DRIVER_ARGS_WEBDRIVER: '["chrome", {"browserName":"chrome","chromeOptions":{"args":["--disable-gpu","--headless", "--no-sandbox"]}}, "http://127.0.0.1:${{ job.services.chromedriver.ports[9515] }}"]'
  cypress:
    runs-on: ubuntu-latest
    name: cypress
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: db
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      chromedriver:
        image: drupalci/webdriver-chromedriver:production
        ports:
          - 9515
    steps:
      - uses: actions/checkout@v4
      - name: "Install Node"
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
      - uses: actions/cache@v4
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          extensions: dom, curl, libxml, mbstring, zip, pdo, mysql, pdo_mysql, bcmath, soap, intl, gd, exif, iconv
          coverage: none
          tools: composer:v2

      - name: Install Composer dependencies
        run: composer install
      - name: Install NPM dependencies
        run: npm ci
      - name: Build frontend
        run: npm run build
      - name: Install Simplytest
        run: php vendor/bin/drush site:install simplytest --account-pass=admin --db-url=mysql://root:@127.0.0.1:${{ job.services.mysql.ports[3306] }}/db --yes
      - name: Run php built-in server
        run: cd web && php -S 127.0.0.1:8080 .ht.router.php &
      - name: env
        run: cp .env.ci .env
      - name: cypress
        run: npm run cypress:run
      - uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          name: cypress
          path: |
            cypress/screenshots
            cypress/results
            cypress/videos
